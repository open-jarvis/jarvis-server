#!/usr/bin/python3

#
# Copyright (c) 2020 by Philipp Scheer. All Rights Reserved.
#

import sys, os, json
from jarvis import SetupTools, Config

# functions
def print_usage():
	print("Usage: jarvis <command> <argument>")
	print("")
	print(" command           | argument")
	print("-------------------+-------------------------------------------")
	print(" add-app           | https://github.com/jarvis-apps/headset")
	print(" remove-app        | headset")
	# print(" add-local-app     | /home/user/Downloads/<app>")
	print(" list-apps         | ")
	exit(0)


# check usage
if len(sys.argv) == 1 or "--help" in sys.argv or "-h" in sys.argv:
	print_usage()


# program
command = sys.argv[1]
argument = sys.argv[2] if len(sys.argv) > 2 else None


# load jarvis configuration
usr = os.getlogin()
config = Config(usr)
if not config.exists():
	print(f"Jarvis not installed for user {usr}")
	exit(1)

APP_DIR = config.get_key("app_dir", None)
if APP_DIR is None:
	root_dir = config.get_key("root_dir", None)
	if root_dir is None:
		print("Jarvis is not setup yet!")
		exit(1)
	APP_DIR = f"{APP_DIR}/apps"

if command == "add-app":
	if argument is None:
		print_usage()
	app_name = argument.split("/")[-1]
	SetupTools.do_action(f"clone git repository ({app_name})", f"git clone {argument} {APP_DIR}/{app_name}")
	res = SetupTools.do_action(f"running setup script at {APP_DIR}/{app_name}/system/setup.py", f"sudo python3 {APP_DIR}/{app_name}/system/setup.py", exit_on_fail=False)
	if res:
		config.set_key(config.get_key("loaded_apps", []).append({
			"name": app_name,
			"web-extension": {
				"loaded": os.path.isdir(f"{APP_DIR}/{app_name}/web-extension"),
				"config": json.loads(open(f"{APP_DIR}/{app_name}/web-extension/config.json", "r").read()) if os.path.isdir(f"{APP_DIR}/{app_name}/web-extension") else {}
			}
		}))

		print("successfully setup app")
	else:
		print("failed to execute setup script")
		SetupTools.do_action("cleaning up", f"rm -rf {APP_DIR}/{app_name}")


print("--- done ---")

